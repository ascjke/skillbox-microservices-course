version: '3'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    env_file:
      - config/.envfile
    ports:
      - 5433:5432
    volumes:
      - ./minmol-grants-data:/var/lib/postgresql/data
    command: postgres -c shared_buffers=32MB -c temp_buffers=8MB
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
    restart: always

  app:
    build: ./
    container_name: minmol-grants
    environment:
      - SERVER_IP=10.18.100.219
      - PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/minmol_grants
      - DB_USER=postgres
      - DB_PASSWORD=el371vpy44wi1d
      - TZ=Asia/Yakutsk
      - JAVA_TOOL_OPTIONS=-XX:+UseG1GC -Xmx960m -Xms128m
    ports:
      - 8080:8080
    depends_on:
      - postgres
    volumes:
      - ./documents:/application/documents
      - ./logs:/application/logs
      - ./users:/application/users
      - ./news:/application/news
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 128M

  prometheus:
    image: prom/prometheus:v2.37.7
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      monitoring:
        aliases:
          - prometheus

  grafana:
    build: ./config/grafana
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    user: root
    ports:
      - 3000:3000
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      monitoring:
        aliases:
          - grafana

networks:
  monitoring:

